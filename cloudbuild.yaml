steps:
  # 1. Build the Docker image
  # This step builds the Docker image using the Dockerfile in the current directory.
  # The image is tagged with the Artifact Registry path, including the project ID, region, repository, image name, and the commit SHA.
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - '$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPOSITORY/$_IMAGE_NAME:$BUILD_ID'
      - '.'
    id: 'Build'

  # 2. Push the Docker image to Artifact Registry
  # This step pushes the built image to the specified Artifact Registry repository.
  # The `images` field implicitly tells Cloud Build to push the image after the build step is complete.
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPOSITORY/$_IMAGE_NAME:$BUILD_ID'
    id: 'Push'

  # 3. Deploy to Cloud Run
  # This step deploys the image from Artifact Registry to Cloud Run.
  # It uses the gcloud builder to execute the `gcloud run deploy` command.
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - '$_SERVICE_NAME'
      - '--image'
      - '$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPOSITORY/$_IMAGE_NAME:$BUILD_ID'
      - '--region'
      - '$_REGION'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--set-env-vars'
      - 'GOOGLE_CLOUD_PROJECT=$PROJECT_ID,GOOGLE_CLOUD_LOCATION=$_REGION,GOOGLE_GENAI_USE_VERTEXAI=true,GEMINI_PRO_MODEL=gemini-2.5-pro,GEMINI_FLASH_MODEL=gemini-2.5-flash,GEMINI_FLASH_LITE_MODEL=gemini-2.5-flash-lite,MAX_VALIDATION_LOOPS=3'
    id: 'Deploy'

# Define the images to be pushed to Artifact Registry after a successful build.
images:
  - '$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPOSITORY/$_IMAGE_NAME:$BUILD_ID'

# Define user-substitutable variables.
# These can be overridden at build time.
substitutions:
  _REGION: 'us-central1'
  _REPOSITORY: 'health-scoring-agent-repo'
  _IMAGE_NAME: 'health-scoring-agent'
  _SERVICE_NAME: 'health-scoring-agent'

options:
  logging: CLOUD_LOGGING_ONLY
